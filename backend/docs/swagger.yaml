basePath: /
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  models.Item:
    properties:
      description:
        type: string
      id:
        type: integer
      imageURL:
        type: string
      name:
        type: string
      quantity:
        type: integer
    type: object
host: localhost:50001
info:
  contact: {}
  description: API for managing items
  title: Items API
  version: "1.0"
paths:
  /items:
    get:
      consumes:
      - application/json
      description: Returns all available items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
      summary: Get all items
      tags:
      - items
  /items/{id}:
    get:
      consumes:
      - application/json
      description: Returns a single item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get item by ID
      tags:
      - items
  /items/create:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new item with form data
      parameters:
      - description: Item name
        in: formData
        name: name
        required: true
        type: string
      - description: Item description
        in: formData
        name: description
        required: true
        type: string
      - description: Item quantity
        in: formData
        name: quantity
        required: true
        type: integer
      - description: Item image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new item
      tags:
      - items
  /items/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an item
      tags:
      - items
  /items/update/{id}:
    put:
      consumes:
      - application/json
      description: Updates quantity of a specific item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: New quantity
        in: body
        name: quantity
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update item quantity
      tags:
      - items
swagger: "2.0"
